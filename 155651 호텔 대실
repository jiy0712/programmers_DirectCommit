logo
코딩테스트 연습
연습문제
호텔 대실
도움말
컴파일 옵션
호텔 대실
제출 내역
문제 설명
호텔을 운영 중인 코니는 최소한의 객실만을 사용하여 예약 손님들을 받으려고 합니다. 한 번 사용한 객실은 퇴실 시간을 기준으로 10분간 청소를 하고 다음 손님들이 사용할 수 있습니다.
예약 시각이 문자열 형태로 담긴 2차원 배열 book_time이 매개변수로 주어질 때, 코니에게 필요한 최소 객실의 수를 return 하는 solution 함수를 완성해주세요.

제한사항
1 ≤ book_time의 길이 ≤ 1,000
book_time[i]는 ["HH:MM", "HH:MM"]의 형태로 이루어진 배열입니다
[대실 시작 시각, 대실 종료 시각] 형태입니다.
시각은 HH:MM 형태로 24시간 표기법을 따르며, "00:00" 부터 "23:59" 까지로 주어집니다.
예약 시각이 자정을 넘어가는 경우는 없습니다.
시작 시각은 항상 종료 시각보다 빠릅니다.
입출력 예
book_time	result
[["15:00", "17:00"], ["16:40", "18:20"], ["14:20", "15:20"], ["14:10", "19:20"], ["18:20", "21:20"]]	3
[["09:10", "10:10"], ["10:20", "12:20"]]	1
[["10:20", "12:30"], ["10:20", "12:30"], ["10:20", "12:30"]]	3
입출력 예 설명
입출력 예 #1

example1
위 사진과 같습니다.

입출력 예 #2

첫 번째 손님이 10시 10분에 퇴실 후 10분간 청소한 뒤 두 번째 손님이 10시 20분에 입실하여 사용할 수 있으므로 방은 1개만 필요합니다.

입출력 예 #3

세 손님 모두 동일한 시간대를 예약했기 때문에 3개의 방이 필요합니다.

solution.py
1
import heapq as h
2
​
3
def t(time):
4
    hours, minutes = map(int, time.split(':'))
5
    return hours * 60 + minutes
6
​
7
def solution(book_time):
8
    a = []
9
    
10
    for start, end in sorted(book_time, key=lambda x: t(x[0])):
11
        start = t(start)
12
        end = t(end) + 10 
13
        
14
        if a and a[0] <= start:
15
            h.heappop(a) 
16
        h.heappush(a, end) 
17
    
18
    return len(a)
19
​
실행 결과
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.06ms, 10.3MB)
테스트 2 〉	통과 (0.41ms, 10.4MB)
테스트 3 〉	통과 (1.75ms, 10.5MB)
테스트 4 〉	통과 (1.91ms, 10.6MB)
테스트 5 〉	통과 (0.03ms, 10.3MB)
테스트 6 〉	통과 (1.54ms, 10.5MB)
테스트 7 〉	통과 (2.85ms, 10.5MB)
테스트 8 〉	통과 (0.73ms, 10.4MB)
테스트 9 〉	통과 (0.94ms, 10.4MB)
테스트 10 〉	통과 (1.88ms, 10.5MB)
테스트 11 〉	통과 (3.64ms, 10.5MB)
테스트 12 〉	통과 (1.78ms, 10.5MB)
테스트 13 〉	통과 (0.65ms, 10.4MB)
테스트 14 〉	통과 (1.51ms, 10.5MB)
테스트 15 〉	통과 (3.07ms, 10.6MB)
테스트 16 〉	통과 (1.22ms, 10.4MB)
테스트 17 〉	통과 (3.70ms, 10.5MB)
테스트 18 〉	통과 (2.21ms, 10.6MB)
테스트 19 〉	통과 (2.14ms, 10.7MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
