logo
코딩테스트 연습
완전탐색
전력망을 둘로 나누기
도움말
컴파일 옵션
전력망을 둘로 나누기
제출 내역
문제 설명
n개의 송전탑이 전선을 통해 하나의 트리 형태로 연결되어 있습니다. 당신은 이 전선들 중 하나를 끊어서 현재의 전력망 네트워크를 2개로 분할하려고 합니다. 이때, 두 전력망이 갖게 되는 송전탑의 개수를 최대한 비슷하게 맞추고자 합니다.

송전탑의 개수 n, 그리고 전선 정보 wires가 매개변수로 주어집니다. 전선들 중 하나를 끊어서 송전탑 개수가 가능한 비슷하도록 두 전력망으로 나누었을 때, 두 전력망이 가지고 있는 송전탑 개수의 차이(절대값)를 return 하도록 solution 함수를 완성해주세요.

제한사항
n은 2 이상 100 이하인 자연수입니다.
wires는 길이가 n-1인 정수형 2차원 배열입니다.
wires의 각 원소는 [v1, v2] 2개의 자연수로 이루어져 있으며, 이는 전력망의 v1번 송전탑과 v2번 송전탑이 전선으로 연결되어 있다는 것을 의미합니다.
1 ≤ v1 < v2 ≤ n 입니다.
전력망 네트워크가 하나의 트리 형태가 아닌 경우는 입력으로 주어지지 않습니다.
입출력 예
n	wires	result
9	[[1,3],[2,3],[3,4],[4,5],[4,6],[4,7],[7,8],[7,9]]	3
4	[[1,2],[2,3],[3,4]]	0
7	[[1,2],[2,7],[3,7],[3,4],[4,5],[6,7]]	1
입출력 예 설명
입출력 예 #1

다음 그림은 주어진 입력을 해결하는 방법 중 하나를 나타낸 것입니다.
ex1.png
4번과 7번을 연결하는 전선을 끊으면 두 전력망은 각 6개와 3개의 송전탑을 가지며, 이보다 더 비슷한 개수로 전력망을 나눌 수 없습니다.
또 다른 방법으로는 3번과 4번을 연결하는 전선을 끊어도 최선의 정답을 도출할 수 있습니다.
입출력 예 #2

다음 그림은 주어진 입력을 해결하는 방법을 나타낸 것입니다.
ex2.png
2번과 3번을 연결하는 전선을 끊으면 두 전력망이 모두 2개의 송전탑을 가지게 되며, 이 방법이 최선입니다.
입출력 예 #3

다음 그림은 주어진 입력을 해결하는 방법을 나타낸 것입니다.
ex3.png
3번과 7번을 연결하는 전선을 끊으면 두 전력망이 각각 4개와 3개의 송전탑을 가지게 되며, 이 방법이 최선입니다.
solution.py
def solution(n, wires):
    answer = -1
    return answer
1
from collections import deque, defaultdict
2
​
3
def bfs(start, a, v):
4
    q = deque([start])
5
    v[start] = True
6
    count = 1
7
    
8
    while q:
9
        node = q.popleft()
10
        for neighbor in a[node]:
11
            if not v[neighbor]:
12
                v[neighbor] = True
13
                q.append(neighbor)
14
                count += 1
15
                
16
    return count
17
​
18
def solution(n, wires):
19
    result = float('inf')
20
    
21
    for i in range(len(wires)):
22
        a = defaultdict(list)
23
        for j in range(len(wires)):
24
            if i == j:
25
                continue
26
            v1, v2 = wires[j]
27
            a[v1].append(v2)
28
            a[v2].append(v1)
29
        
30
        v = [False] * (n + 1)
31
        count = bfs(1, a, v)
32
        d = abs(n - count - count)
33
        result = min(result, d)
34
    
35
    return result
36
​
실행 결과
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (5.07ms, 10.3MB)
테스트 2 〉	통과 (4.77ms, 10.2MB)
테스트 3 〉	통과 (4.21ms, 10.2MB)
테스트 4 〉	통과 (4.44ms, 10.4MB)
테스트 5 〉	통과 (5.00ms, 10.4MB)
테스트 6 〉	통과 (0.02ms, 10.3MB)
테스트 7 〉	통과 (0.02ms, 10.4MB)
테스트 8 〉	통과 (0.21ms, 10.4MB)
테스트 9 〉	통과 (0.18ms, 10.3MB)
테스트 10 〉	통과 (4.42ms, 10.2MB)
테스트 11 〉	통과 (5.16ms, 10.2MB)
테스트 12 〉	통과 (4.54ms, 10.3MB)
테스트 13 〉	통과 (4.25ms, 10.2MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
