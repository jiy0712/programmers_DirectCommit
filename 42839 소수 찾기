logo
코딩테스트 연습
완전탐색
소수 찾기
도움말
컴파일 옵션
소수 찾기
제출 내역
문제 설명
한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다.

각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 return 하도록 solution 함수를 완성해주세요.

제한사항
numbers는 길이 1 이상 7 이하인 문자열입니다.
numbers는 0~9까지 숫자만으로 이루어져 있습니다.
"013"은 0, 1, 3 숫자가 적힌 종이 조각이 흩어져있다는 의미입니다.
입출력 예
numbers	return
"17"	3
"011"	2
입출력 예 설명
예제 #1
[1, 7]으로는 소수 [7, 17, 71]를 만들 수 있습니다.

예제 #2
[0, 1, 1]으로는 소수 [11, 101]를 만들 수 있습니다.

11과 011은 같은 숫자로 취급합니다.
solution.py
def solution(numbers):
    answer = 0
    return answer
1
from itertools import permutations
2
​
3
def solution(numbers):
4
    set_ = set()
5
​
6
    for i in range(1, len(numbers) + 1):
7
        for p in permutations(numbers, i):
8
            num = int(''.join(p))
9
            if is_prime(num):
10
                set_.add(num)
11
    
12
    return len(set_)
13
​
14
def is_prime(n):
15
    if n < 2:
16
        return False
17
    for i in range(2, int(n ** 0.5) + 1):
18
        if n % i == 0:
19
            return False
20
    return True
21
​
실행 결과
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.15ms, 10.5MB)
테스트 2 〉	통과 (2.31ms, 10.5MB)
테스트 3 〉	통과 (0.03ms, 10.3MB)
테스트 4 〉	통과 (2.41ms, 10.4MB)
테스트 5 〉	통과 (11.22ms, 10.4MB)
테스트 6 〉	통과 (0.03ms, 10.3MB)
테스트 7 〉	통과 (0.17ms, 10.5MB)
테스트 8 〉	통과 (12.23ms, 10.4MB)
테스트 9 〉	통과 (0.04ms, 10.4MB)
테스트 10 〉	통과 (5.90ms, 10.3MB)
테스트 11 〉	통과 (0.55ms, 10.3MB)
테스트 12 〉	통과 (0.31ms, 10.3MB)
채점 결과
정확성: 100.0
합계: 100.0 / 100.0
