logo
코딩테스트 연습
연습문제
가장 큰 정사각형 찾기
도움말
컴파일 옵션
가장 큰 정사각형 찾기
제출 내역
문제 설명
1와 0로 채워진 표(board)가 있습니다. 표 1칸은 1 x 1 의 정사각형으로 이루어져 있습니다. 표에서 1로 이루어진 가장 큰 정사각형을 찾아 넓이를 return 하는 solution 함수를 완성해 주세요. (단, 정사각형이란 축에 평행한 정사각형을 말합니다.)

예를 들어

1	2	3	4
0	1	1	1
1	1	1	1
1	1	1	1
0	0	1	0
가 있다면 가장 큰 정사각형은

1	2	3	4
0	1	1	1
1	1	1	1
1	1	1	1
0	0	1	0
가 되며 넓이는 9가 되므로 9를 반환해 주면 됩니다.

제한사항
표(board)는 2차원 배열로 주어집니다.
표(board)의 행(row)의 크기 : 1,000 이하의 자연수
표(board)의 열(column)의 크기 : 1,000 이하의 자연수
표(board)의 값은 1또는 0으로만 이루어져 있습니다.
입출력 예
board	answer
[[0,1,1,1],[1,1,1,1],[1,1,1,1],[0,0,1,0]]	9
[[0,0,1,1],[1,1,1,1]]	4
입출력 예 설명
입출력 예 #1
위의 예시와 같습니다.

입출력 예 #2
| 0 | 0 | 1 | 1 |
| 1 | 1 | 1 | 1 |
로 가장 큰 정사각형의 넓이는 4가 되므로 4를 return합니다.

solution.py
1
def solution(board):
2
    n = len(board)
3
    m = len(board[0])
4
    mmax = 0
5
    
6
    for i in range(n):
7
        if board[i][0] == 1:
8
            mmax = 1
9
    
10
    for j in range(m):
11
        if board[0][j] == 1:
12
            mmax = 1
13
    
14
    for i in range(1, n):
15
        for j in range(1, m):
16
            if board[i][j] == 1:
17
                left = board[i][j-1]
18
                up = board[i-1][j]
19
                diagonal = board[i-1][j-1]
20
                board[i][j] = min(left, up, diagonal) + 1
21
                mmax = max(mmax, board[i][j])
22
    
23
    return mmax * mmax
24
​
실행 결과
채점을 시작합니다.
정확성  테스트
테스트 1 〉	통과 (0.00ms, 10.4MB)
테스트 2 〉	통과 (0.02ms, 10.1MB)
테스트 3 〉	통과 (0.05ms, 10.1MB)
테스트 4 〉	통과 (0.06ms, 10.1MB)
테스트 5 〉	통과 (0.11ms, 10.1MB)
테스트 6 〉	통과 (0.02ms, 10.2MB)
테스트 7 〉	통과 (0.01ms, 10.4MB)
테스트 8 〉	통과 (0.01ms, 10.4MB)
테스트 9 〉	통과 (0.02ms, 10.2MB)
테스트 10 〉	통과 (0.09ms, 10.2MB)
테스트 11 〉	통과 (0.02ms, 10.1MB)
테스트 12 〉	통과 (0.03ms, 10.1MB)
테스트 13 〉	통과 (0.02ms, 10.2MB)
테스트 14 〉	통과 (0.04ms, 10.2MB)
테스트 15 〉	통과 (0.05ms, 10.4MB)
테스트 16 〉	통과 (0.05ms, 10.2MB)
테스트 17 〉	통과 (0.05ms, 10.1MB)
테스트 18 〉	통과 (1.46ms, 10.1MB)
테스트 19 〉	통과 (1.17ms, 10.2MB)
효율성  테스트
테스트 1 〉	통과 (507.89ms, 31.1MB)
테스트 2 〉	통과 (528.67ms, 30.6MB)
테스트 3 〉	통과 (538.73ms, 30.8MB)
채점 결과
정확성: 59.6
효율성: 40.4
합계: 100.0 / 100.0
